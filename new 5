- Планирование и управление памятью.
    - Синхронизация.
        Включает в себя спин-блокировки (spinlock), мьютексы (взаимные исключения) и специальные блокировки чтения/записи на системных ресурсах.
    - Брокеры памяти. 
        Брокеры памяти распределяют распределение памяти между различными компонентами в SQL Server, но не выполняют никаких распределений, которые обрабатываются диспетчером памяти.
    - Обработка исключений. 
        Обработка исключений включает в себя обработку пользовательских ошибок, а также системных ошибок.
    - Обнаружение взаимоблокировок. 
        Механизм обнаружения взаимоблокировок включает не только блокировки, но и проверку любых задач, связанных с ресурсами, которые взаимно блокируют друг друга.
    - Расширенные события.
        Отслеживание расширенных событий аналогично возможности SQL Trace, но намного эффективнее, поскольку отслеживание выполняется на гораздо более низком уровне, чем SQL Trace.        
    - Асинхронный I/O. 
        Когда SQL Server запрашивает синхронный I/O, если ресурс недоступен, ядро ​​Windows помещает поток в очередь ожидания до тех пор, пока ресурс не станет доступным.
        Для асинхронного I/O SQL Server запрашивает, чтобы Windows инициировала I/O. Windows запускает операцию I/O и не останавливает поток.
        Затем SQL Server помещает сеанс сервера в очередь ожидания I/O, пока он не получит сигнал от Windows о том, что ресурс доступен.
    - Хостинг CLR. 
      Хостинг Common Language Runtime (CLR) внутри SQLOS позволяет использовать управляемый код .NET внутри SQL Server.
      В SQL Server 2012 хост CLR изменился на .NET 4.0, который включает в себя изменения в отчетах памяти и сборке мусора для AppDomains, загружаемых SQLOS. 
      Распределения памяти для SQLCLR могут включать в себя распределения любой страницы внутри SQLOS, а также виртуальные выделенные выделения из операционной системы Windows.