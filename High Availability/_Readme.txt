Непрерывная доступность приложений (или высокая доступность) включает в себя три основные переменные (см. рис. Дерево доступности, изображающее различные аспекты доступности.jpg):
    Время в работе (Uptime).
        Время, в течение которого ваше приложение работает и доступно для конечных пользователей.
    Запланированные простои (Planned downtime).
        Время, в течение которого один или несколько системных стеков становятся недоступными для планового обслуживания, обновлений и т.д.        
    Незапланированные простои (Unplanned downtime).
        Время, в течение которого система недоступна из-за сбоев в человеческих ошибках, сбоя оборудования, сбоя программного обеспечения или стихийного бедствия (землетрясения, торнадо и т.д.).
                
        Существуют два типа незапланированных простоев:
            - Время простоя, которое «восстанавливается» с помощью обычных механизмов восстановления.
              Это включает время простоя, вызванное такими вещами, как замена нового жесткого диска на замену неисправного, а затем восстановление системы.
            - Время простоя, которое «не восстанавливается» и что делает вашу систему полностью недоступной и не может быть восстановлена ​​локально.
              Это включает такие вещи, как стихийное бедствие или любое другое незапланированное время простоя, которое влияет на аппаратное обеспечение.
              
Кроме того, хороший план аварийного восстановления имеет первостепенное значение для применения критически важных приложений любой компании и должен быть частью вашего планирования высокой готовности.

Расчет доступности.
    Availability percentage = ((MBU − TU) / MBU) × 100

    MBU - среднее время между недоступностью (время, прошедшее с момента последней недоступности).

    TU - недоступно (запланированное/незапланированное время простоя).
    
    В качестве основы для этого расчета важно использовать общий фактор времени (например, минуты).
    
Континуум доступности.
    В континууме (см. рис. Общая классификация доступности.jpg) показана общая классификация доступности на основе количества времени простоя, которое приложение будет терпеть без влияния на бизнес.
    Вы должны написать свои соглашения об уровне обслуживания (Service Level Agreements (SLAs)) для поддержки и достижения одной из этих категорий континуума.
    
    Простои могут быть либо незапланированными, либо запланированными (см. рис. Запланированная и незапланированная доступность.jpg), 
    на основе этих аспектов выделяются категории континуума доступности.
    
    Наличие экстремальной доступности помещает вас в дальний верхний правый квадрант как почти нулевого времени запланированных простоев, так и незапланированных простоев.
    
Переменные доступности (Availability variables).
    Переменные, которые помогут вам определить, ваши требования к высокой доступности (см. https://www.safaribooksonline.com/library/view/sql-server-2016/9780134467610/ch02.xhtml#ch01_lvl1_sec3).
    
Проектирование высокой нагрузки.
    УКРЕПЛЕНИЕ ВАШЕГО СИСТЕМНОГО СТЕКА ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ (операционная система, база данных, промежуточное программное обеспечение, антивирус и т.д.). 
    Это чрезвычайно важно для быстрого исправления ошибки, которая приводит вашу систему в работу.

    УКРЕПЛЕНИЕ ВАШИХ АППАРАТНЫХ УСТРОЙСТВ (резервные сетевые карты, ECC память, массивы RAID дисков, зеркалирование дисков, кластерные серверы и т.д.). 
    Будьте осторожны с уровнями RAID, потому что они будут варьироваться в зависимости от характеристик ваших приложений.
    
    СОКРАЩЕНИЕ ЧЕЛОВЕЧЕСКИХ ОШИБОК. 
    Это связано с внедрением строгих системных элементов управления, стандартов, процедур, обширного тестирования QA и других методов изоляции приложений.
    
    ОПРЕДЕЛЕНИЕ ПЕРВИЧНЫХ ПЕРЕМЕННЫХ ПОТЕНЦИАЛЬНОЙ ВЫСОКОДОСТУПНОЙ СИСТЕМЫ. 
    Это должно также включать определение требований к уровню обслуживания ваших приложений и определение плана аварийного восстановления.
    
    На рис. Один-два удара (one-two punch) для достижения высокой доступности.jpg показан подход один-два удара (one-two punch),
    который объединяет все эти области в два основных этапа, которые необходимо предпринять для достижения высокой доступности для приложения.
    
    Основная предпосылка заключается в том, чтобы сначала создать надлежащую основу (или использовать уже созданную в ней базовую структуру PaaS/IaaS), 
    а затем применить соответствующие решения Microsoft HA, соответствующие потребностям ваших приложений.
    
Методология разработки высокой доступности.
    Общие этапы разработки программного обеспечения и соответствующие задачи с высокой доступностью в каждой фазе следующие (см. рис. Методика разработки с высокой доступностью.jpg):
        Этап 0: Оценка (область).
            - Планирование проекта.
            - Размер проекта.
            - Определенные результаты (отчет о работе).
            - Рассписание/основные этапы.
            - Высокие требования (область).
            - Оцените первичные переменные высокой доступности (калибровать).
        Этап 1: Требования.
            - Подробные требования (процесс/данные/технология).
            - Раннее прототипирование (необязательно).
            - Основные первичные переменные высокой доступности.
            - Подробные соглашения/требования к уровню обслуживания.
            - Подробные требования к аварийному восстановлению.
        Этап 2: Дизайн.
            - Детальный дизайн (данные/процесс/технология).
            - Выберите и разработайте подходящее решение для высокой доступности для приложения.
        Этап 3: Кодирование и тестирование.
            - Разработка кода/модульное тестирование.
            - Полностью интегрируйте решение высокой доступности с приложением.
        Этап 4: Тестирование и приемка системы.
            - Полный системный тест/принятие пользователем.
            - Полная проверка доступности/аттестация/приемка.
        Этап 5: Реализация.
            - Производственная сборка/реализация.
            - Производственная сборка высокой доступности/начало мониторинга.
            
            
Оценка существующих приложений.
    Вы должны быстро ответить на следующие вопросы:
        - Каковы текущие и будущие характеристики вашего приложения?        
        - Каковы ваши требования к уровню обслуживания?    
        - Каково влияние (стоимость) простоя?   
        - Каковы ваши уязвимости (аппаратное обеспечение, программное обеспечение, человеческие ошибки и т.д.)?    
        - Какова ваша временная шкала для реализации решения высокой доступности?
        - Каков ваш бюджет для решения высокой доступности?
        
    Соберите больше деталей в следующих областях:
        - Анализ текущего состояния/будущего состояния приложения.
        - Конфигурация оборудования/доступные параметры.
        - Конфигурация программного обеспечения/доступные параметры.
        - Используемые процедуры резервного копирования/восстановления.
        - Используемые стандарты/рекомендации.
        - Тестирование/используемые процесы QA.
        - Оценка навыков системных администраторов.
        - Оценка навыков разработчиков системы.
        
Соглашение об уровне обслуживания (Service Level Agreement (SLA)).
    Договор между владельцем приложения и пользователем приложения. 
    
    SLA имеет следующие основные элементы:
        1. Владелец приложения.
        2. Пользователь приложения.
        3. Описание приложения.        
        4. Время работы/доступность.        
        5. Условия соглашения, в том числе:
            - Продолжительность соглашения (часто в год).
            - Уровни времени отклика (на ошибки, улучшения приложений и т.д.).
            - Процедуры/шаги которым следовать.
            - Штрафы (очень часто денежные), если условия не выполняются.