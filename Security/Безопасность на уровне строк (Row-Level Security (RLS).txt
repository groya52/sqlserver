В SQL Server 2016 реализована, безопасность на уровне строк (Row-Level Security (RLS)).

Позволяет администраторам баз данных упростить управление мелкозернистой безопасностью, предоставляя готовые технологии. 
RLS также может помочь в улучшении архитектурных принципов, выводя логику и безопасность на задний план.

RLS реализуется с помощью политики безопасности (security policy) и предикатов безопасности (security predicates).

Предикаты безопасности (security predicates).
    Предикат безопасности является встроенной табличной функцией, которая применяется к результирующему набору, 
    чтобы определить, какие строки могут быть возвращены или изменены пользователем имеющим доступ к данным.
            
    Существует два типа предикатов безопасности, которые могут быть реализованы: 
        - Предикаты фильтра (filter predicates).
            Фильтруют строки, которые возвращаются пользователю при запросе таблицы или представления.
            Этот тип предиката является тихим, что означает, что пользователю или приложению не дано указание, что строки были отфильтрованы из набора результатов. 
            Предикаты фильтра влияют на операторы SELECT, UPDATE и DELETE.
        - Предикаты блоков (block predicates).
            Предикаты блока возвращают ошибку, если они нарушены. 
            Этот тип предиката явно блокирует инструкции INSERT, UPDATE и DELETE, которые нарушают предикат. 
            
            UPDATE
                Предикаты блоков могут быть определены как BEFORE или AFTER.
            INSERT
                Предикаты блоков могут быть определены как AFTER.
            DELETE
                Предикаты блоков могут быть определены как BEFORE.
                
            BEFORE
                Предикат применяется на основе исходного значения.
            AFTER 
                Предикат применяется на основе значения кортежа после применения инструкции.
                
    Хорошая идея создать новую схему, в которой можно разместить свои предикаты безопасности. 
    Это связано с тем, что любой пользователь должен иметь доступ к функциям, а размещение объектов RLS в отдельной схеме упрощает управление этими разрешениями.
    
    При создании функции также рекомендуется использовать SCHEMABINDING. 
    Это связано с тем, что любая функция вызывает или присоединяется к другим таблицам, может быть выполнена без дополнительной настройки разрешения.
    Если вы не используете SCHEMABINDING, то требуемые разрешения SELECT или EXECUTE требуются для ссылочных объектов пользователями, вызывающими предикат безопасности.
    
Политика безопасности (security policy).
    Политика безопасности связывает предикат(ы) безопасности с таблицами и представлениями. 
    Политика безопасности вызывает предикат безопасности и указывает, как следует использовать предикат (фильтровать, блокировать до, блокировать после).
    
    Политику безопасности можно создать с помощью инструкции CREATE SECURITY POLICY (см. Реализация Row-Level Security (RLS).sql).