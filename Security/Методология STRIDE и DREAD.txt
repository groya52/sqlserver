Угрозы, выявленные в результате теста на проникновение, могут быть классифицированы с использованием методологий:
    STRIDE
        Подмена личности (Spoofing identity).
            Означает кражу личности другого пользователя и использование этого идентификатора для аутентификации, а не использования собственной личности.
        Вмешательство в данные (Tampering with data).
            Относится к практике вредоносного изменения данных (межсайтовый скриптинг (XSS), манипулирование HTTP-заголовками).
        Отказ от ответственности (Repudiation).
            Способность злоумышленника скрывать или отрицать свою активность.
        Раскрытие информации (Information disclosure).
            Это относится к украденным данным.
            
            Кража данных возникает, когда злоумышленник заставляет систему обнаруживать больше данных, чем они имеют разрешения на просмотр.
        Отказ в обслуживании (Denial of service (DoS)).
            Происходят, когда злоумышленник пытается наводнить систему большим количеством запросов, что они либо снижают работоспособность системы,
            либо делают систему недоступной из-за ее неспособности справиться с объемом получаемых запросов.
        Повышение привилегий (Elevation of privileges).
            Относится к использованию уезвимости системы, чтобы получить больше разрешений, чем вы предполагали.
    
    Использование STRIDE.
        Необходимо документировать потенциальные угрозы для приложения.
        
        Классификация STRIDE:
            Риск                                                Категория   Пример
            SQL-инъекция                                        S, T, I     
            DoS                                                 D           Атакующий использует роботы для одновременного наводнения базы данных ресурсоемкими запросами.
            Воровство учетных данных (учетной записи sa)        Е           Злоумышленник подозревает, что учетная запись sa не была отключена или переименована. Поэтому атака запускается против пароля учетной записи sa.
            DBA выполняет вредоносное действие                  р           Привилегированный пользователь выполняет вредоносные действия, и атака не может быть доказана из-за отсутствия аудита.
            Использование уязвимости                            S, T        Злоумышленник запускает вредоносный запрос для использования уязвимости в SQL Server.
            
    Оценки угроз.
        Самый простой метод для оценки угроз - это система высокий/средний/низкий.
            С этой системой каждой угрозе присваивается рейтинг, основанный на вашем мнении. Это делает систему оценки субъективной, поскольку мнения не обязательно правильны.
            Мнения часто различаются, поэтому может быть трудно достичь консенсуса в отношении приоритета, в котором должны быть устранены угрозы.
        
        Несколько более научный подход заключается в использовании системы критический/важный/умеренный/низкий.
            Эта система предлагает больше категорий, которые могут помочь в определении приоритетов, когда существует большое количество угроз. 
            
            Критическая угроза. 
                Определяются как угроза, которая позволяет злоумышленнику проникнуть в систему без каких-либо предупреждений.
            Важная угроза.
                Рассматривается как угроза, где данные могут быть скомпрометированы злоумышленником, и злоумышленнику легко будет воспользоваться этой уязвимостью, если она была обнаружена.
            Умеренная угроза.
                Классифицируется как угроза, где злоумышленник может воспользоваться уязвимостью, однако, риск смягчается такими факторами, как интегрированная аутентификация.    
            Низкая угроза.
                Вероятность использования уязвимости очень низка из-за существующей инфраструктуры или контрмер, которые существуют.
                Зачастую угрозы, которые классифицируются как низкие, не рассматриваются, поскольку было принято решение о том, что затраты на их устранение перевешивают потенциальные издержки использования атаки.
            
        Формула вероятности повреждения - еще одна общая система для определения рейтингов угроз. 
            Используя этот метод, вы оцениваете потенциал урона каждой угрозы с использованием шкалы от 1 до 10, где 1 означает, что атака, 
            использующая эту конкретную уязвимость, приведет к минимальному ущербу, а 10 указывает, что атака, использующая конкретную уязвимость, будет катастрофой.
        
            Затем вы оцениваете вероятность реализации угрозы по шкале от 1 до 10. Здесь 1 указывает, что вероятность реализации угрозы очень мало, а 10 означает, что она почти наверняка. 
            После того, как будут установлены два рейтинга для каждой угрозы, вы умножаете рейтинг потенциального ущерба на рейтинг вероятности для каждой угрозы. 
            Это дает вашим угрозам приоритетный балл по шкале от 1 до 100.
        
    DREAD
        Потенциал повреждения (Damage potential).
            Оценка потенциального урона каждой угрозы с использованием шкалы от 1 до 10, где 1 означает, что атака, использующая эту конкретную уязвимость, 
            приведет к минимальному ущербу, а 10 означает, что атака, использующая конкретную уязвимость, будет катастрофой.
        Воспроизводимость (Reproducibility).
            Насколько легко было бы, чтобы атакующий неоднократно воспроизводил атаку по шкале от 1 до 10. 
            1 указывает, что было бы почти невозможно воспроизвести, а 10 означает, что было бы очень легко воспроизвести атаку. 
            Чем проще воспроизводить атаку, тем больше вероятность атак с использованием ботов, которые систематически используют уязвимость.
        Уязвимость (Exploitability).
            Легкость, с которой атака может использовать уязвимость, с использованием шкалы от 1 до 10. 
            1 указывает на то, что уязвимость будет чрезвычайно сложно использовать из-за таких факторов, как требуемая аутентификация домена.
            Рейтинг 10 указывает, что злоумышленник может легко использовать уязвимость.
        Затронутые пользователи (Affected users).
            Количество пользователей, на которые может повлиять угроза в масштабе от 1 до 10. 
            Чтобы рассчитать рейтинг, вы должны принять процент пользователей, которые будут затронуты, разделить это число на 10, а затем округлить до ближайший целое число.
            Например, если пострадает 80 процентов пользователей, рейтинг будет равен 8. Если пострадают только 25 процентов пользователей, рейтинг будет равен 3.
        Обнаружение (Discoverability).
            Как легко злоумышленнику обнаружить уязвимость по шкале от 1 до 10. 
            Оценка 1 означает, что уязвимость является неясной и злоумышленник вряд ли натолкнуться на него или реализовать свой потенциал.
            Оценка 10 будет означать, что уязвимость может быть легко обнаружена. Например, это может быть хорошо известная, документированная стратегия атаки, такая как SQL-иньекция.
            
    Использование DREAD.
        Когда каждой угрозе присваивается рейтинг в каждой из категорий DREAD, оценки должны суммироваться, а затем делиться на количество угроз до округления до ближайшего целого числа. 
        Это дает вам общий рейтинг DREAD для каждой угрозы.
        
        Риск                                         Категория D  Р  Е  A  D  Рейтинг
        SQL-инъекция                                 S, T, I   10 10 9  10 10 10
        DoS                                          D         10 10 10 10 10 10
        Воровство учетных данных (учетной записи sa) Е         6  10 8  10 10 9
        DBA выполняет вредоносное действие           Р         10 1  1  10 10 6
        Использование уязвимости                     S, T      8  5  5  6  1  5
        
        Атаки SQL-инъекций, кражи пароля учетной записи sa и DoS должны быть немедленно устранены. 
        Риск администраторов баз данных, выполняющих вредоносные действия и использование уязвимости, должны быть устранены, но с более низким приоритетом.
        
SQL-инъекции.
    Проверку полученных входных данных, это должно быть выполнено в приложении. Следует рассмотреть, как приложение взаимодействует с базой данных. 
    Использование хранимых процедур, в отличие от специального SQL. Убедиться, что хранимая процедура проверяет значения, переданные ее параметрам.    
DoS.
    Данные атаки являются одними из самых сложных для защиты. Это объясняет, почему они являются одной из наиболее распространенных форм атак.
    Одним из способов снижения риска является обеспечение того, чтобы сервер базы данных не был помещен в DMZ и поэтому не был напрямую открыт для интернета.    
    Можно еще больше снизить влияние атаки DoS, используя Resource Governor. Это позволяет ограничить ресурсы, которые были потреблены запросами злоумышленника.
Воровство учетных данных (учетной записи sa).
    Риск атаки злоумышленника, получившего повышенные привилегии, путем атаки на пароль учетной записи sa может быть уменьшен путем отключения или переименования учетной записи sa.
DBA выполняет вредоносное действие.
    Если администратор баз данных решил атаковать базу данных, то мало того, что вы можете сделать, чтобы остановить его.
    Использование SQL Server Audit, чтобы обеспечить отслеживание вредоносных действий. 
    Очевидная причина заключается в том, что вы можете доказать, что произошло, и предпринять соответствующие действия.
    Менее очевидным является тот факт, что вы можете доказать и принять меры против злонамеренного администратора базы данных, 
    который потенциально будет действовать в качестве сдерживающего фактора. Это известно как мягкая мера безопасности.
    Процессы также должны быть пересмотрены, чтобы обеспечить соблюдение разумных передовых методов, 
    таких как отключение учетных записей пользователей, когда сотрудник уходит.
Использование уязвимости.
    Вы должны сохранить риск, зарегистрированный в регистре рисков вашего проекта, и исправить экземпляр, как только будет доступен патч.
    