Функциональность криптографии SQL Server зависит от иерархии ключей и сертификатов. 

Главный ключ (master key).
    Корневым уровнем иерархии шифрования SQL Server является главный ключ службы. 
    
    Главный ключ службы создается автоматически при создании экземпляра. 
    Он используется для шифрования основных ключей базы данных, учетных данных и паролей для связанных серверов с использованием DPAPI.
    
    Главный ключ службы хранится в master базе данных. Для каждого экземпляра всегда есть один главный мастер сервиса. 
    
    Начиная с SQL Server 2012, главный ключ службы был симметричным ключом, сгенерированным с использованием алгоритма AES 256. 
    В старых версиях SQL Server использовался алгоритм Triple DES.
    
    Главный ключ службы используется для шифрования закрытых ключей и сертификатов, которые хранятся в базе данных. 
       
    ПРИ ОБНОВЛЕНИИ ЭКЗЕМПЛЯРА ИЗ SQL SERVER 2008 R2 ИЛИ НИЖЕ РЕКОМЕНДУЕТСЯ ПЕРЕГЕНЕРИРОВАТЬ КЛЮЧ ИЗ-ЗА АЛГОРИТМА ШИФРОВАНИЯ, 
    ИСПОЛЬЗУЕМОГО В SQL SERVER 2012 И ВЫШЕ.
    
    Если вам необходимо восстановить главный ключ службы, все ключи в иерархии шифрования экземпляра должны быть дешифрованы и затем повторно зашифрованы. 
    Это означает, что каждый ключ и сертификат, которые зашифрованы прямо или косвенно из главного ключа, должны быть восстановлены.
    Это очень ресурсоемкий процесс, и его следует использовать только во время окна обслуживания.
    
    Вы можете восстановить главный ключ службы (ALTER SERVICE MASTER KEY.sql).
    
    Если процесс не может расшифровать и повторно зашифровать любой ключ, который находится ниже его в иерархии, то по умолчанию весь процесс регенерации завершается с ошибкой. 
    Вы можете изменить это поведение, используя ключевое слово FORCE, которое заставляет процесс продолжать работу после ошибок.


    Использование ключевого слова FORCE оставляет любые данные, 
    которые невозможно дешифровать и повторно зашифровать непригодными для использования.
    
    ОЧЕНЬ ВАЖНО СОЗДАТЬ РЕЗЕРВНУЮ КОПИЮ ПОСЛЕ СОЗДАНИЯ НОВОГО ЭКЗЕМПЛЯРА И ПОСЛЕ ВОССТАНОВЛЕНИЯ КЛЮЧА (см. Резервное копирование и восстановление главного ключа службы.sql).
    
    Если главный ключ службы, который вы восстанавливаете, идентичен, тогда данные не нужно расшифровывать и повторно шифровать.
    
Extensible Key Management (EKM).
    Модуль EKM позволяет создавать и управлять ключами и сертификатами, используемыми для защиты данных SQL Server в стороннем аппаратном модуле безопасности (HSM).
    
    Модуль EKM предоставляет интерфейс с SQL Server с использованием Microsoft Cryptographic API (MS-CAPI). 
    
    При использовании HSM вы также можете увидеть улучшенную производительность, поскольку шифрование и дешифрование ключей основаны на аппаратных средствах.
    
Хранилища ключей.
    Хранилища ключей обеспечивают безопасное хранение и надежный источник ключей и сертификатов. 
    
    Хранилище сертификатов Windows предоставляет функциональные возможности вашего собственного предприятия Windows Server. 
    
    Azure Key Vault предлагает ключевое хранилище в Windows Azure. 
    
    Существуют также сторонние поставщики с открытым исходным кодом, такие как Amazon Key Management Services (который является сервисом в экосистеме Amazon Web Services), KeyWhiz и Vault, и это лишь некоторые из них.
    

ИЕРАРХИЯ ШИФРОВАНИЯ SQL SERVER (см. рис. Иерархия шифрования SQL Server.jpg).
    
    Шифрование данных с помощью пароля.
        Самый простой уровень шифрования данных в SQL Server - это функция ENCRYPTBYPASSPHRASE(),
        которая позволяет шифровать данные напрямую с помощью пароля или парольной фразы, а не иерархии шифрования SQL Server.
    
        Для расшифровки данных используется функция DECRYPTBYPASSPHRASE().