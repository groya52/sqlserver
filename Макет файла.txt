Доступ к файлам данных осуществляется с помощью случайных операций чтения и записи.
Доступ к файлам журналов транзакций осуществляется с помощью последовательных операций.

Обычно рекомендуется разделить файлы данных и файлов транзакций на отдельные тома для повышения производительности.

SQL Server использует базу данных tempdb для сортировки, хранения временных объектов и многих других действий.
Также рекомендуется размещать tempdb в выделенном томе для поддержки своей уникальной рабочей нагрузки.

Файлы данных (.mdf и .ndf) обычно размещаются на одном или нескольких выделенных томах с большим количеством места для роста файлов.
Диски, предназначенные для файлов данных, должны поддерживать большое количество случайных операций записи. 
Случайные операции записи часто вызывают фрагментацию жесткого диска и, таким образом, производят задержки поиска из-за постоянного изменения положения головки диска на жестком диске.
SSD могут уменьшить задержку чтения и записи операций произвольного доступа, поскольку нет движущихся головок чтения диска.

Файлы журналов обычно размещаются на томе с выделенными дисками, которые поддерживают высокие последовательные операции записи.
Последовательные операции записи не вводят столько фрагментации, как операции случайной записи.
Жесткие диски и SSD могут использоваться для размещения файлов журналов, хотя SSD обеспечивают более высокую пропускную способность и IOPS, чем жесткие диски.

Tempdb считается специальным типом базы данных, который обычно размещается на выделенном томе.
Хотя tempdb не считается критически важной базой данных, он играет ключевую роль в производительности запросов SQL Server.
Некоторые среды SQL Server в значительной степени зависят от tempdb и могут иметь устойчивые требования к чтению и записи. 
Считается лучшей практикой размещать файлы tempdb в выделенном томе, 
чтобы отделить некоторые из этих непредсказуемо тяжелых шаблонов ввода-вывода от физических дисков, назначенных для файлов данных и файлов транзакций.

Размещение файлов резервной копии базы данных часто пропускается и иногда помещается в том же томе, что и данные, журнал транзакций и файлы tempdb.
Резервное копирование и восстановление базы данных - это асинхронная операция, которая обеспечивает высокий уровень ввода-вывода в подсистеме хранения.
Типичный подход заключается в том, чтобы запускать задания резервного копирования в томах с более быстрыми дисками, 
чтобы задания резервного копирования могли выполняться как можно быстрее, а затем переходить на более медленный объем хранилища для долгосрочного архивирования.
Важно подчеркнуть, что при необходимости восстановления базы данных из файла резервной копии операция восстановления должна выполняться как можно быстрее.

Макет файлов для SQL Server:
	Диск 1
		Операционная система и двоичные файлы SQL Server.
	Диск 2
		Системные базы данных (master, model, msdb).
		
		Важно отделить файлы системной базы данных от файлов пользовательских баз данных, так как некоторые среды могут испытывать чрезмерное использование диска в базе данных системы msdb. 
		База данных msdb используется для хранения заданий агента SQL, истории резервного копирования и некоторых функций, включая Servive Broker и Database Mail.
	Диск 3
		Файлы данных базы данных пользователя (.mdf & .ndf).
	Диск 4
		Файлы журнала транзакций базы данных пользователей (.ldf).
		
		Если несколько баз данных сильно используют журнал транзакций, рекомендуется размещать файлы журнала транзакций на отдельных выделенных дисках.
	Диск 5
		Данные tempdb и файлы журналов транзакций.
		
		Для многопроцессорных экземпляров SQL Server рекомендуется несколько файлов данных tempdb, в которых наблюдается конфликт распределения tempdb.
	Диск 6
		Файлы резервного копирования базы данных.
		
		Только последние резервные файлы хранятся на этом диске для быстрого извлечения, если требуется восстановление базы данных.
		Старые файлы резервных копий перемещаются в более постоянное хранилище или просто очищаются в соответствии с политиками хранения организации.
		
