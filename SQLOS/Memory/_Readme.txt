Клерки памяти (Memory Clerks).
    Всякий раз, когда потребитель памяти в SQL Server хочет распределять память, 
    ему необходимо пройти через клерка памяти, а не прямо на узел памяти.
    
    У пула буферов, есть свой собственный клерк памяти (MEMORYCLERK_SQLBUFFERPOOL), как и у планов запросов (MEMORYCLERK_SQLQUERYPLAN), 
    что значительно упрощает поиск и устранение неполадок, поскольку вы можете просмотреть распределения памяти, сделанные каждым клерком.
    
    Вы можете просмотреть сведения обо всех клерках памяти, используя DMV sys.dm_os_memory_clerks.

Кеши (Cashes).
    SQL Server использует три типа механизма кэширования: хранилище объектов, хранилище кэш-памяти и хранилище пользователей.
    
    Чтобы просмотреть различные кеши, реализованные на вашем SQL Server, используйте DMV sys.dm_os_memory_cache_counters.

Буферный пул (Buffer pool).
    Пул буферов содержит и управляет кэшем данных SQL Server.
    
    Вы можете просмотреть содержимое буфер пул и определить его текущий размер, 
    используя DMV sys.dm_os_buffer_descriptors или запустить DBCC MEMORYSTATUS и найти раздел Buffer pool.
    
    Memory Manager
        Total Server Memory (KB)
            Объем памяти, потребляемой сервером.
        Target Server Memory (KB)
            Идеальный объем памяти, который может потреблять сервер.
            
            Total и Target должны быть практически одинаковыми на сервере без какого-либо давления памяти. 
            Если Total значительно меньше Target, то либо рабочая нагрузка не будет достаточной для дальнейшего роста SQL Server, 
            либо SQL Server не сможет увеличить буферный пул из-за давления памяти, и в этом случае вы сможете продолжить исследование.
    Buffer Manager
        Page Life Expectancy
            Показывает среднее количество секунд, в течение которых страница данных будет оставаться в пуле буферов.
            Показывает общее значение для всех узлов NUMA.
            
            Если используется архитектура NUMA, вы должны использовать PLE из объекта SQLServer:Buffer Node.
            
            Microsoft рекомендует минимум 300 секунд для хорошего PLE; этот порог продолжает обсуждаться в сообществе SQL Server, 
            но все согласны с тем, что менее 300 секунд - это плохо. 
            В системах с большим количеством физической памяти это легко достигнет тысячи секунд.
    
Кеш планов (Plan cache).
    Вы можете просмотреть содержимое кеша плана и определить его текущий размер, 
    используя DMV sys.dm_exec_cached_plans или запустить DBCC MEMORYSTATUS и найти раздел Procedure Cache, 
    в котором вы найдете количество планов в кеше и размер кеша, на страницах 8 КБ.
    
Память запроса (Query memory).
    Вы можете просмотреть сведения о любых запросах, у которых уже есть выделение памяти запроса (грант памяти), 
    и тех, которые ждут выделения памяти, используя DMV sys.dm_exec_query_memory_grants.
    
    В памяти запросов также есть собственный клерк памяти, что означает, что вы можете просмотреть информацию о размерах для выдающихся грантов памяти, 
    запросив DMV sys.dm_os_memory_clerks, где type = 'MEMORYCLERK_SQLQERESERVATIONS' .
    
    Существует несколько различных способов получить информацию об использовании памяти запросов на вашем SQL Server в дополнение к DMV.
    Performance Monitor предоставляет следующие счетчики, все из которых находятся в диспетчере памяти экземпляра:
        SQLServer:Memory Manager
            Granted Workspace Memory (KB)
                Определяет общий объем памяти, предоставляемой в настоящее время для выполнения процессов, таких как операции хэша, сортировки, массовой копии и создания индекса.
            Maximum Workspace Memory (KB)
                Общий объем памяти, который SQL Server помечен для памяти запросов.
            Memory Grants Pending
                Количество ожидающих в очереди ожиданий памяти.
            Memory Grants Outstanding
                Количество используемых в настоящее время ресурсов памяти.
                
    Тип ожидания RESOURCE_SEMAPHORE - это ожидание по гранту памяти, поэтому, 
    если вы видите это в верхней части ваших результатов из DMV sys.dm_os_wait_stats, 
    ваша система изо всех сил пытается предоставить гранты памяти достаточно быстро.
    
Минимальная и максимальная память сервера.
    Min Server Memory (MB) и Max Server Memory (MB) контролируют допустимый размер использования памяти SQL Server.
    
    Когда запускается служба SQL Server, она не получает всю память, сконфигурированную в Min Server Memory, 
    но вместо этого запускается только с минимальным требованием, увеличиваясь по мере необходимости. 
    После того, как использование памяти увеличилось за пределами параметра Min Server Memory, SQL Server не выпустит какую-либо память ниже этой суммы.

    Настройка Max Server Memory для пула буферов является более важным из двух параметров и не позволит SQL Server брать слишком много памяти. 
    
    Существует несколько различных способов расчета подходящего значения для настройки Max Server Memory, но два из них самых простых:
        - Посмотрите на максимальное использование SQL Server.
            Устанавливаете SQL Server для динамического управления памятью, а затем отслеживаете счетчик Memory Manager\Total Server Memory (KB) с помощью Performance Monitor.
            Этот счетчик измеряет общий пул буферов SQL Server.
            
            Значение общей памяти сервера уменьшится, если другие требования, помимо SQL Server, потребуют больше физической памяти, чем в настоящее время бесплатно, а затем снова увеличьте использование свободной памяти.
            Если вы отслеживаете этот счетчик в течение определенного периода времени, который является репрезентативным для вашей компании (т.е. Он включает периоды занятости и ожидания), 
            вы можете установить максимальную память сервера на самое низкое значение, которое наблюдалось для Total Server Memory (KB), и вам не придется беспокоиться о том, 
            что SQL Server должен сокращать его использование во время обычных операций.
        - Определите максимальный потенциал для требований к памяти за пределами SQL Server.
            Вы должны учитывать следующее:
                - 2 ГБ для Windows.
                - xGB для рабочих потоков SQL Server. 
                  Вы можете найти максимальное количество рабочих потоков, запросив sys.dm_os_sys_info. 
                  Каждый поток будет использовать 0.5MB на x86 и 2MB на x64.
                - 512 МБ, если вы используете связанные серверы, DLL расширенной хранимой процедуры или объекты, созданные с помощью процедур автоматизации (вызовы sp_OA).
                - 1-3 ГБ, для других приложений, которые могут выполняться в системе, например, программ резервного копирования или антивирусного программного обеспечения.
                
    После утановки Max Server Memory, важно измерять эффективность и скорректировать его, когда сервер выполнил ожидаемую рабочую нагрузку. 
    Легкий способ сделать это - использовать счетчики монитора производительности, в частности, Buffer Manager\Page Life Expectancy (PLE) и Memory\Available MBytes.
    Баланс между этими двумя счетчиками показывает, насколько эффективна настройка Max Server Memory.
    
    Если ваш PLE низкий (<300 определенно низкий, но вы можете выбрать более высокий порог), тогда проверьте Available MBytes, чтобы узнать, сколько неиспользуемой ОЗУ доступно. 
    Windows начинает агрессивно обрезать все рабочие группы приложений, когда доступно менее 5 МБ, поэтому все, что близко к этому на производственном сервере, должно считаться неотложной проблемой.
    
    Минимальный Available MBytes, который у вас должен быть, составляет 100 МБ, но даже это слишком сильно сокращает его, потому что любое приложение, 
    которое запускается на вашем SQL Server, может легко использовать это. 
    Вместо этого попробуйте прицелиться на 500 или 600 МБ как минимум или даже на 1 ГБ. 
    Таким образом, если вам нужно запустить какие-либо средства поддержки на сервере, для них будет достаточно ОЗУ.
    
    Итак, если ваш PLE низкий, и у вас много Available MBytes, потому что вы были консервативны с настройкой Max Server Memory, 
    тогда у вас есть возможность увеличить максимальную память сервера, тем самым увеличив ваш PLE. 
    И наоборот, если ваши Available MBytes низки, потому что вы были агрессивны с параметром Max Server Memory и ваш PLE очень высок, 
    вы можете уменьшить максимальную память сервера, чтобы вернуть RAM обратно в Windows.