Инструменты мониторинга.
    - Performance Monitor.
        Processor/Process
            % Processor Time
                Не должен быть постоянно высоким (более 80%). Эффект любого продолжительного времени процессора более 90% фактически совпадает с эффектом 100%.
                Если % Processor Time постоянно высока, а значения счетчика диска и сети низкие, ваш первый приоритет должен быть направлен на снижение нагрузки на процессор.
                
                Например, если % Processor Time равен 85%, и вы наблюдаете чрезмерное использование диска, контролируя счетчики ввода-вывода, вполне вероятно, 
                что основная часть времени процессора тратится на управление дисковыми действиями. В этом случае будет предпочтительно сначала оптимизировать узкое место на диске. 
                Кроме того, помните, что узкое место на диске, в свою очередь, может быть связано с узким местом памяти.
            % Privileged Time
                Обработка на сервере Windows выполняется в двух режимах: режиме пользователя и привилегированном (или ядре) режиме.
                Все действия на системном уровне, включая доступ к диску, выполняются в привилегированном режиме. 
                
                Если вы обнаружите, что % Privileged Time на выделенной системе SQL Server составляет от 20 до 25 процентов или более, 
                система, вероятно, выполняет большую часть внешней обработки. 
                
                Счетчик % Privileged Time в выделенной системе SQL Server должен составлять не более 5-10 процентов, 
                но используйте базовый уровень, чтобы установить, что выглядит как нормальное поведение в ваших системах.            
        System
            Processor Queue Length
                Количество потоков в очереди процессоров (существует одна очередь процессоров, даже на компьютерах с несколькими процессорами).
                
                Счетчик очереди процессоров не считает потоки, которые уже запущены.
                В системах с более низким потреблением ЦП счетчик очереди процессора обычно равен 0 или 1.
                
                Постоянный счетчик очереди процессора больше 2 обычно указывает на перегрузку процессора. 
                Из-за нескольких процессоров вам может потребоваться учитывать количество планировщиков, занимающихся длиной очереди процессора.
                
                Длина очереди процессора, более чем в два раза превышающая количество планировщиков (обычно 1:1), также может указывать на узкое место процессора.
                
                Несмотря на то, что счетчик с высоким процентом процессорного времени указывает на занятый процессор, 
                более устойчивым показателем является постоянный счетчик очереди процессора. 
                
                Если рекомендуемое значение превышено, это обычно указывает на то, что есть больше потоков, готовых к запуску, 
                чем текущее число процессоров может обслуживать оптимальным образом.            
            Context Switches/Sec
                Контролирует общую скорость, с которой все процессоры на компьютере переключаются из одного потока в другой. 
                
                Переключатель контекста возникает, когда работающий поток добровольно отказывается от процессора, 
                выгружается с помощью высокоприоритетного готового потока или переключается между пользовательским режимом и привилегированным режимом для использования службы исполнительной или подсистемы.
                
                Число 5000 Context Switches/Sec на процессор отлично подходит для справедливости. 
                Высокие числа в значительной степени диктуются скоростью ваших процессоров, поэтому измерьте производительность с течением времени и сравните этот номер с базовым уровнем, чтобы понять, когда вы можете отклоняться.
        
        SQLServer:SQL Statistics
            Batch Requests/sec
                Batch Requests/sec дает вам хороший показатель того, сколько нагрузки размещается в системе.
                
                Поскольку вы можете увидеть много недорогих запросов в своей системе или несколько высокозатратных запросов, 
                вы не можете рассматривать это число самостоятельно, но должны ссылаться на другие счетчики, определенные в этом разделе (10 000 запросов в секунду будут считаться занятой системой).
                
                Лучший способ узнать, какое значение имеет смысл в ваших собственных системах, это установить базовый уровень, а затем следить за ним.
            SQL Compilations/Sec
                Показывает, как компиляции пакетов, так и операторы перекомпилируются как часть его агрегации.
                
                Это число может быть чрезвычайно высоким при первом включении сервера (или после отказа или какого-либо другого события типа запуска), 
                но со временем будет стабилизироваться.
            SQL Recompilations/Sec
                Большое количество перекомпиляций может привести к нагрузке процессора.
                
    - DMVs.
        sys.dm_os_wait_stats
            Возвращает данные обо всех случаях ожидания, обнаруженных выполнявшимися потоками.
        sys.dm_os_workers
            Возвращает строку на каждый рабочий поток.        
        sys.dm_os_schedulers
            Возвращает по одной строке для каждого планировщика SQL Server, сопоставленного с отдельным процессором.
            
Решения для устранения узких мест процессора.
    - Оптимизация нагрузки приложения.
        Чтобы идентифицировать запросы, интенсивно использующие процессор, захватите все SQL-запросы с использованием сеансов XE, а затем сгруппируйте вывод по колонке CPU.
        
        Вы также можете напрямую запрашивать DMV sys.dm_exec_query_stats или sys.dm_exec_procedure_stats, чтобы увидеть немедленные проблемы в реальном времени.
    - Устранение или уменьшение чрезмерных компиляций/перекомпиляций.
        Определенное количество компиляций и перекомпиляций запросов просто нужно ожидать, при работе с инструментами ORM.
    - Использование большего количества или более быстрых процессоров.
    - Не запускать ненужное программное обеспечение.