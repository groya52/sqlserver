CXPACKET
    Возникает, когда запрос выполняется параллельно.
    
    Параллельные запросы используют несколько рабочих потоков для выполнения запроса. 
    Наряду с рабочими потоками, созданными для выполнения запрошенной работы, параллельный запрос также будет использовать дополнительный поток, задача которого состоит в том, чтобы координировать работу других рабочих потоков. 
    Пока этот поток ожидает, пока другие рабочие потоки завершат работу, которая им была назначена для выполнения, он будет записывать время ожидания типа CXPACKET.
    
    Понижение времени ожидания CXPACKET путем настройки конфигурации параллелизма.
        Cost Threshold for Parallelism
            Если последовательный запрос имеет стоимость выше, чем значение, заданное в Cost Threshold for Parallelism, оптимизатор запросов может решить создать параллельный план вместо последовательного.
            По умолчанию параметр имеет значение 5 и может быть настроен на значение от 0 до 32767.
        
        Max Degree of Parallelism
            Настраивает количество планировщиков, используемых при выполнении параллельного плана. 
            По умолчанию этот параметр имеет значение 0, что означает, что все доступные планировщики могут использоваться, когда выполняется параллельный план.
            
            Использование большего количества планировщиков не обязательно означает, что запрос выполняется быстрее. 
            
            Microsoft рекомендует следующую конфигурацию в KB2806535:
                - Для серверов с более чем 8 ядрами установите для параметра Max Degree of Parallelism значение 8.
                - Для серверов с менее чем 8 ядрами установите для параметра Max Degree of Parallelism значение 0 или количество ядер на вашем сервере.
        
            Значение параметра Max Degree of Parallelism в запросах можно переопределить, указав в инструкции запроса подсказку MAXDOP. 
        
    Перекос рабочей нагрузки.
        Свойство Actual number of rows показывает распределение потоков параллельной операции в фактическом плане выполнения.
        
        Перекошенные нагрузки часто вызваны устаревшей статистикой. Если оптимизатор запросов считает, что в таблице меньше (или нескольких строк), то на самом деле существует возможность распределить работу неравномерно по потокам.
        
    Наличие этих ожиданий не обязательно означает, что есть проблема. Реальность состоит в том, что нам, возможно, потребуется провести дополнительные исследования, чтобы убедиться, что проблема действительно в параллелизме.
    Чтобы устранить проблему с ожиданием CXPACKET, необходимо начать с просмотра ожиданий дополнительных дочерних параллельных потоков.
    
SOS_SCHEDULER_YIELD (см. https://www.safaribooksonline.com/library/view/pro-sql-server/9781484211397/9781484211403_Ch04.xhtml#Sec6)
    Планировщик предоставляет каждому рабочему потоку определенный фрагмент времени (квант), в котором они должны выполнять свою работу.
    Если рабочий поток расходует свой квант, он возвращается в Runnable Queue. Он пропустит Waiter List, потому что рабочий поток не нуждается в дополнительных ресурсах.
    Пока рабочий поток ожидает возврата к процессору, записывается тип ожидания SOS_SCHEDULER_YIELD.
    SOS_SCHEDULER_YIELD будет регистрироваться только в том случае, если рабочий поток действительно должен был ждать в Runnable Queue.
    
    SOS_SCHEDULER_YIELD не может быть получен с помощью sys.dm_os_waiting_tasks.
    
    Если вы столкнулись с этой проблемой, первое, необходимо обратить внимание, на очень маленькие и очень быстрые запросы.
    Увеличился ли объем этих запросов? Увеличилось ли количество пользовательских подключений к SQL Server, выполняющих эти запросы?
    Неожиданный рост транзакций или пользовательских подключений может привести к высокому времени ожидания SOS_SCHEDULER_YIELD.
    
    Еще одна причина высокого SOS_SCHEDULER_YIELD ожидания, а также очень высокий уровень использования ЦП, может быть феномен, называемый циклическая блокировка (spinlock).
    
    Очень большие и очень сложные запросы также могут привести к увеличению времени ожидания SOS_SCHEDULER_YIELD. 
    Попытайтесь найти активные запросы, которые потребляют много времени процессора и имеют сложные вычисления или преобразования типов данных.
    
THREADPOOL
    Возникают из-за того, что для обработки запросов недостаточно свободных рабочих потоков, поэтому задачи, запрашивающие рабочий поток, должны будут ждать, пока новый рабочий поток станет доступным.
    
    Если в системе происходят ожидания THREADPOOL с гораздо большим временем ожидания, чем обычно, и SQL Server (почти) не отвечает, скорее всего, вы столкнулись с проблемой, называемой голоданием пула потоков.
    Голодание пула потоков возникает, когда нет свободных рабочих потоков, доступных для обработки запросов.
    Когда возникает такая ситуация, задачи, которые в настоящее время ждут, чтобы им был назначен рабочий поток будут регистрировать тип ожидания THREADPOOL.

    SQL Server предоставляет рабочие потоки планировщикам для обработки запросов. Количество рабочих потоков, зависит от количества процессоров и архитектуры процессора.
    
    32 разрядная система с <= 4 логическими процессорами: 256 рабочих потоков.
    32 разрядная система с > 4 логическими процессорами: 256 + ((количество логических процессоров - 4) * 8).
    
    64 разрядная система <= 4 логическими процессорами: 512 рабочих потоков.
    64 разрядная система с > 4 логическими процессорами: 512 + ((количество логических процессоров - 4) * 16).
    
    SQL Server автоматически вычисляет максимальное количество доступных рабочих потоков, можно задать количесвто рабочих потоков, изменив параметр Maximum Worker Threads внутри свойств Processors экземпляра SQL Server.
    По умолчанию значение параметра Maximum Worker Threads равно 0, что означает, что SQL Server будет вычислять и назначать максимальное количество рабочих потоков доступный по формулам выше.

    EXEC sp_configure 'show advanced options', 1;
    GO
    RECONFIGURE;
    GO
    EXEC sp_configure 'max worker threads', max_worker_threads;
    GO
    RECONFIGURE;
    GO
    
    Количество рабочих потоков, назначенных экземпляру SQL Server:
        
        SELECT max_workers_count 
        FROM   sys.dm_os_sys_info;

    Число рабочих потоков, работающих и ожидающих:
        
        SELECT scheduler_id
              ,current_tasks_count
              ,runnable_tasks_count
              ,current_workers_count
              ,active_workers_count
              ,work_queue_count 
        FROM   sys.dm_os_schedulers 
        WHERE  status = 'VISIBLE ONLINE';
        
        current_workers_count
            Количество рабочих потоков (все рабочие потоки), связанных с планировщиком, это число также включает рабочие потоки, которые еще не назначены для задачам.
        active_workers_count
            Количество рабочих потоков (назначены задаче), которые находятся в состоянии RUNNING, RUNNABLE или SUSPENDED.
        work_queue_count
            Задачи, которые ждут, чтобы получить рабочий поток.
            Если вы видите значения выше 0 в этом столбце в течение более длительного периода времени и для всех планировщиков, вы испытываете голод пула потоков.
        
    THREADPOOL не регистрируются в sys.dm_os_waiting_tasks как сеансы пользователя, имеют пустой идентификатор сеанса. Именно по этой причине рекомендуется не фильтровать sys.dm_os_waiting_tasks на номера идентификаторов сеанса.
     
    Ожидания THREADPOOL могут полностью блокировать ваш экземпляр SQL Server, что делает невозможным подключение к нему.
     
        Чтобы подключиться к экземпляру SQL Server для устранения неполадок, необходимо включить Dedicated Connection Administrator Connection (DAC).
        Специальный тип планировщика VISIBLE ONLINE (DAC), зарезервирован для DAC и имеет доступ к своим собственным рабочим потокам.
        
        Включить DAC:
            
            sp_configure 'remote admin connections', 1;
            GO
            RECONFIGURE;
            GO
            
            Чтобы подключиться к экземпляру SQL Server с помощью DAC, вам необходимо добавить префикс ADMIN к имени сервера.
                
                ADMIN:server_name
            
    THREADPOOL ожидания, вызванные параллелизмом.
        
        Загрузка процессора в этом конкретном случае обычно выше, чем обычно.
        
        Во время выполнения параллельного запроса для выполнения требуемой работы используются несколько рабочих потоков. 
        В зависимости от количества процессоров, к которым имеет доступ SQL Server, и количества рабочих потоков, используемых во время параллельного запроса, для одного параллельного запроса может потребоваться множество рабочих потоков.
        
        Если вы столкнетесь с этим конкретным случаем, вы, как правило, увидите много ожиданий CXPACKET (с высоким временем ожидания).
        
    THREADPOOL ожидания, вызванные подключениями пользователей.
        
        Распространенной причиной ожидания THREADPOOL является внезапное увеличение числа пользователей, подключающих и выполняющих запросы к экземпляру SQL Server. 
        Эта проблема может возникнуть, если, например, приложение, которое подключается к вашему экземпляру SQL Server, использует несколько соединений. 
        Главная проблема здесь в том, что эти соединения остаются активными и продолжают приобретать рабочие потоки.
        
        Большая разница между ожиданиями THREADPOOL, вызванными чрезмерным параллелизмом и увеличением пользовательских подключений, заключается в том, что процессоры остаются с постоянным низким процентом использования.
        
        Пользовательские подключения должны вызывать ожидания THREADPOOL, когда они фактически запускают запросы. 
        Пользовательские подключения, подключенные к экземпляру SQL Server, но не выполняющие ничего, не должны быть причиной ожидания THREADPOOL.
        
        При наличии множества различных пользовательских подключений к базе данных может создаваться множество блокировок для строк или таблиц. 
        Если вы заметите, время ожидания блокировок вместе с ожиданиями THREADPOOL, проблема может заключаться в большом количестве блокировок.