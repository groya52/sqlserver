Логические типы агрегации:
    Скалярная агрегация. Нет условия группировки, результат всегда одно значение.
    Векторная агрегация. Задано условие группировки, результат ни одного, одно или более значений.
	
Физические типы агрегации:
	Stream Aggregate
		Не блокирующий оператор.
		Входной поток должен быть отсортирован.
        Не требует память.
        Выгодно, когда небольшой набор данных, где данные отсортированны с помощью оператора сортировки или предварительно отсортированного ввода.
        Единственный реализует скалярную агрегацию (не требует сортировку).
        Единственный оператор, который может возвращать строку из пустого входного набора.
		
        Может требовать отсортированный входной набор от векторной агрегации.
		Единственый некорнеовой оператор, который может возвращать строку из пустого входного набора
		
        Подсказка OPTION (ORDER GROUP).
        
        ROLLUP итоговый результат вычесляется используя только Stream Aggregate.
		
	Hash Match Aggregate
        Блокирующий оператор (кроме Flow Distinct - ни какой агрегирующей функции, необходимо запросить меньше строк чем уникальных значений).
        Входной поток не требует сортировку и не сохраняет сортировку.
        Не поддерживает скалярную агрегацию.
        Выгодно, когда большой набор неотсортированных данных и мало уникальных значений. 
        Требует память (может сливать данные в TempDB (не дооценка строк)).
		Хорошо работает в паралельных планах.
		
        Подсказка OPTION (HASH GROUP).
        
        Строит в памяти хэш-таблицу, для каждой строки из своих входных данных вычисляет хэш-значение (с использованием хэш-функции) и осуществляет поиск совпадений по хэш-таблице.
        Если совпадение обнаружено запись агрегируются в эту группу, иначе создается новая запись в хэш-таблице.
            
            
Функции агрегации:
    Language Element  Expression  Plan Element  Internal         Description
    
    COUNT_BIG(*)      not null    countstar     I8CountStarStep
                                  
    COUNT_BIG(expr)   not null    countstar     I8CountStarStep
                      null        count_big     I8CountStep
    
    SUM(expr)         not null    countstar     SumAvgStep
    AVG(expr)                     sum      
                      null        count_big     SumAvgStep
                                  sum
    
    SUM(complex)      not null    countstar     AccumStep
    AVG(complex)                  sum
                      null        count_big     I8CountStep      Выполняется две функции, 
                                  sum           AccumStep        влияет на производительность.
                                  
    Двойной расчет выражения возможен, если выражение сложное, nullable и в функциях SUM, AVG, VAR, VARP, STDEV, STDEVP.

    ANY
        Не документирован.
        Используется только сервером.
        
        Является результатом упрощения:
            Шаблон
                WITH CTE 
                AS
                (
                    SELECT ID
                          ,Value
                          ,Number = ROW_NUMBER() OVER(PARTITION BY ID ORDER BY ID)
                    FROM   Table
                )
                
                SELECT ID
                    ,Value
                FROM   CTE
                WHERE  Number = 1;
            
            Результат
                SELECT ID
                      ,ANY(Value) AS Value
                FROM   Table
                GROUP  BY ID;
    
Преобразования оптимизатора
    Distinct Sort 
        Когда необходимо получить только уникальные значения (не используются агрегирующие функции).
        
    Left Semi Join
    Top + Segment
    Projection
    Constant Scan
    
    Reordering
        Перестановки местами в плане агрегации и других операторов плана (соединения (до/после), конкатенация (до/после)).
        Выполнения перестановки зависит от семантики и выгоды по стоимости.
        
    Local-Global Aggregation
        Разделение агрегирования на две части - локальная (выполняется для части агрегируемых строк) и глобальная (выполняется для части локальной агрегации).
		Часто бывает в паралельных планах.