Ошибки преобразования.
Ошибки арифметических операций.
    При делении числа на ноль, DAX обычно возвращает специальное значение Infinity.
    При делении ноль на ноль или Infinity на Infinity, DAX возвращает специальное значение NaN (не число).
    
    DAX может возвращать арифметические ошибки при вызове функции с неправильным параметром.
        
        Если DAX обнаруживает такие ошибки, он блокирует любое дальнейшее вычисление выражения и вызывает ошибку. 
        Вы можете использовать функцию ISERROR, чтобы проверить, приводит ли выражение к ошибке.
        
    Специальные значения, такие как NaN, отображаются таким образом в окне Power Pivot или в Visual Studio, но они могут отображаться как ошибки, если они отображаются некоторыми инструментами клиента, такими как сводная таблица Excel.
    Более того, эти специальные значения будут обнаружены как ошибки функциями обнаружения ошибок.
    
Пустые или отсутствующие значения.
    DAX обрабатывает отсутствующие значения, пустые значения или пустые ячейки, используя значение BLANK. 
    BLANK - это не реальное значение, а особый способ идентифицировать эти условия. Вы можете получить значение BLANK в выражении DAX, вызвав функцию BLANK.
    
    BLANK() + BLANK() = BLANK() 
    value * BLANK () = BLANK() 
    BLANK() / value = BLANK() 
    BLANK() / BLANK() = BLANK() 
    BLANK() || BLANK() = FALSE 
    BLANK() && BLANK() = FALSE 
    BLANK() = BLANK() = TRUE
    
    BLANK() - value = -value 
    value + BLANK() = value 
    value / BLANK() = Infinity 
    0 / BLANK () = NaN 
    FALSE || BLANK() = FALSE 
    FALSE && BLANK() = FALSE 
    TRUE || BLANK() = TRUE 
    TRUE && BLANK() = FALSE
    
Перехват ошибки.
    IFERROR(value, value_if_error)
    
    ISERROR(value)
        
        IF(ISERROR(value), value_if_true, value_if_false)
        
    ISBLANK(value)
    
    Функции обработки ошибок могут создавать серьезные проблемы с производительностью в вашем коде. Дело не в том, что они медленны сами по себе.
    
    В большинстве случаев более эффективно проверять операнды на возможные ошибки, а не на использование механизма обработки ошибок.
        
        ISERROR(value)

        Гораздо лучше написать следующее:

            IF(logical_test, value_if_true, value_if_false)
            
            Это второе выражение не нуждается в обнаружении ошибки, и оно быстрее предыдущего.
